### Huffman Text Compressor Kevin Chin 11/09/2018
### This script encodes given text file into binary
### using the Huffman Tree generated by HuffmanTreeGenerator.py
from HuffmanTreeGenerator import *

MT = MasterTree #make a local reference to the Huffman Tree from HuffmanTreeGenerator.py
txt = text      #make a local reference to the text string from HuffmanTreeGenerator.py


#Recursive function to produce the traversal path (to reach the correct Character leaf) as a string of binary
def produceBinary(node, path):
    if isinstance(node, Char):
        if node.character is c:
            return path #Correct leaf, therefore return the path taken to get here
        else:
            return ""   #Wrong leaf,therefore get rid of path and return empty string
    else:
        return produceBinary(node.left, path + "0") + produceBinary(node.right, path + "1")



#Declare the variable to output as final output
binaryOutput = ""

#Iterate for each character in the text string, and produce the binary for each character
for c in text:
    path = ""
    binaryOutput = binaryOutput + (produceBinary(MT, path))

#Print the converted binary code of given text file
print(binaryOutput)